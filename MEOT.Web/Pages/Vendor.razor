@page "/Vendor/{vendorName}"

@inject APIHttpClient client

@using MEOT.lib.Containers
@using MEOT.Web.Clients

<h1>@vendorName</h1>

@if (vendorData == null)
{
    <p>Loading...</p>
}
else
{
    <h2>Overview</h2>
    <div class="card bg-dark text-white">
        <div class="card-body">
            <p>
                <label>
                    <strong class="text-uppercase">Average Days To Detection</strong><br/>
                    @vendorData.AverageTimeToDetect
                </label>
            </p>

            <p>
                <label>
                    <strong class="text-uppercase">Number of Detections / Number of Opportunities</strong><br/>
                    @vendorData.NumDetections / @vendorData.NumAttempts
                </label>
            </p>

        </div>
    </div>
    <h2>Detection History</h2>

    <table class="table table-striped table-hover table-dark">
        <thead>
        <tr>
            <th>Malware Name</th>
            <th>Attack Vector</th>
            <th>Detected</th>
            <th>Classification</th>
            <th>Days to Classification</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in vendorData.DetailedAnalysis)
        {
            <tr>
                <td><a href="/MalwareAnalysis/@item.MalwareName">@item.MalwareName</a></td>
                <td>@item.MalwareType</td>
                <td>@(item.Detected ? "Yes" : "No")</td>
                <td>@item.Classification</td>
                @if (item.Detected && item.HoursToDetect.HasValue)
                {
                    <td>@(item.HoursToDetect.Value < 0 ? 0 : Math.Round(item.HoursToDetect.Value / 24, 0))</td>
                }
                else
                {
                    <td></td>
                }
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public string vendorName { get; set; }

    private VendorContainer vendorData { get; set; }

    protected override async Task OnInitializedAsync() =>
        vendorData = await client.GetVendorData(vendorName);
}