@page "/MalwareAnalysis/{query}"

@using System.Linq

@using MEOT.lib.Managers
@using MEOT.lib.Objects

@inject MalwareManager malwareManager
@inject NavigationManager navManager

@if (malware == null)
{
    <p>Loading...</p>
}
else
{
        <h1>@malware.Name Breakdown</h1>

        <h2>Overview</h2>

        <p>
            <label>
                SHA1: @malware.SHA1
            </label>
        </p>

    <p>
        <label>
            <a href="https://www.virustotal.com/gui/file/@malware.SHA1/detection" target="_blank">VirusTotal Link</a>
        </label>
    </p>

    @if (malwareCheckpoint == null)
    {
        <p>
            Analysis has not been run yet
        </p>
    }
    else
    {
        <p>
            <label>
                @malwareCheckpoint?.Detections out of @malwareCheckpoint?.Vendors vendors
            </label>
        </p>
    }

    <h2>Vendor Detected Breakdown</h2>
}

@if (vendorBreakdown == null || malware == null)
{
    <p><em>Loading...</em></p>
}
else if (!vendorBreakdown.Any() && malware != null)
{
    <p>No Vendors currently catch this malware</p>
} else  {
    <table class="table">
        <thead>
        <tr>
            <th>Vendor Name</th>
            <th>Classification</th>
            <th>Date of Detection</th>
            <th>Hours to Classification</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in vendorBreakdown.Where(a => a.Detected))
        {
            <tr>
                <td><a href="/Vendor/@item.VendorName">@item.VendorName</a></td>
                <td>@item.Classification</td>
                <td>
                    @if (item.DetectionDate.HasValue)
                    {
                        @item.DetectionDate.Value.ToShortDateString()
                    }
                </td>
                <td>@item.HoursToDetection</td>
            </tr>
        }
        </tbody>
    </table>

    <h2>Vendor Undetected Breakdown (@Math.Round(DateTimeOffset.Now.Subtract(malware.DayZero).TotalHours, 0) Hours since inception)</h2>
}


@if (vendorBreakdown == null)
{
    <p><em>Loading...</em></p>
}
else if (vendorBreakdown.All(a => a.Detected))
{
    <p>No Vendors currently classify this as benign</p>
} else  {
    <table class="table">
        <thead>
        <tr>
            <th>Vendor Name</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in vendorBreakdown.Where(a => !a.Detected))
        {
            <tr>
                <td><a href="/Vendor/@item.VendorName">@item.VendorName</a></td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public string query { get; set; }

    private List<MalwareVendorCheckpoint> vendorBreakdown;

    private MalwareCheckpoint malwareCheckpoint;

    private Malware malware;

    protected override void OnInitialized()
    {
        malware = malwareManager.GetMalwareQuery(query);

        if (malware != null)
        {
            malwareCheckpoint = malwareManager.GetCheckpoint(malware.Id);

            vendorBreakdown = malwareManager.GetVendorCheckpoints(malware.Id);

            return;
        }

        navManager.NavigateTo("/404");
    }
}