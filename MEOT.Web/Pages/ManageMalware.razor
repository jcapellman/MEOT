@page "/ManageMalware"

@using MEOT.lib.DAL.Base
@using MEOT.lib.Objects

@inject IDAL db
@inject NavigationManager NavManager

<h1>Manage Tracked Malware</h1>

<button @onclick="AddMalware" class="btn btn-primary btn-rounded"><i class="bi-file-plus"></i>&nbsp; New Tracker</button>

<br/>

@if (malware == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Created</th>
                <th>Name</th>
                <th>Type</th>
                <th>SHA1</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in malware)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Created></td>
                    <td>@item.Name</td>
                    <td>@item.Format</td>
                    <td>@item.SHA1</td>
                    <td>
                        <button class="btn btn-rounded" @onclick="() => EditMalware(item)" title="Edit"><i class="bi-file-earmark-text"></i></button>

                        <button class="btn btn-rounded" @onclick="() => DeleteMalware(item)" title="Delete"><i class="bi-trash"></i></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Malware> malware;

    protected void AddMalware()
    {
        NavManager.NavigateTo("/AddEditMalware");
    }

    protected void DeleteMalware(Malware item)
    {
        db.Delete(item);

        malware = db.SelectAll<Malware>();
    }

    protected void EditMalware(Malware item)
    {
        
    }

    protected override async Task OnInitializedAsync()
    {
        malware = db.SelectAll<Malware>();
    }
}
